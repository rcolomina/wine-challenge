which R
.libPaths(
)
install.packages("plsRglm")
quit()
which R
R.home()
install.packages("plsRglm")
getwd()
setwd(dir)
dir <- "/home/martin/git/afs-challenge/"
setwd(dir)
getwd()
library("plsRglm")
install.packages("plsRglm")
install.packages("boot
")
install.packages("boot")
install.packages("MASS")
install.packages("car")
install.packages("car",dependencies=TRUE)
install.packages("plsRglm",dependencies=TRUE)
install.packages("car",dependencies=TRUE)
install.packages("car",dependencies=TRUE)
install.packages("car",dependencies=TRUE)
install.packages("car",dependencies=TRUE)
installed.packages()
install.packages("plsRglm",dependencies=TRUE)
installed.packages()
library("plsRglm")
help("plsRglm")
data <-read.csv("data/winequality-red.csv")
data.head()
data
data <-read.csv("data/winequality-red.csv", sep = ;)
data <-read.csv("data/winequality-red.csv", sep = ';')
data
class(data)
str(data)
summary(data)
dim(data)
hist(data$alcohol, breaks=5)
X <- data[,:-1]
X <- data[,1:12]
dim(X)
dim(data)
X <- data[,0:12]
dim(X)
X <- data[,1:11]
X
y <- data$quality
fit <- plsRglm(y, X, modele="pls-glm-gaussian")
str(fit)
fit$FinalModel
clf <- fit$FinalModel
str(clf)
fit <- plsRglm(y, X, 10,  modele="pls-glm-gaussian")
clf <- fit$FinalModel
data[,1]
data[,1:]
data[,1:end]
data[,1:12]
data.matrix()
idx = data[,1]
idx <- data[,1]
mask <- sample.split(idx, SplitRatio=0.8)
dim(data)
dim(data)[0]
dim(data)[1]
p <-dim(data)[2] - 1
p
sample(y, 0.8)
sample(y, 1)
sample(data, 1)
n*0.8
n <- dim(data)[1]
n*0.8
floor(.7)
mask <- sample.int(n, floor(n*0.8))
mask
data[mask]
data[mask,]
data[~mask,]
data[!mask,]
data[mask,]
train <- data[~mask,]
train <- data[mask,]
train <- data[mask,]
dim(train)
n
mask
!mask
train <- data[mask,]
train <- data[mask,]
rownames(data)
mask
test <- data[setdiff(mask, as.numeric(rownames(data)))]
test
dim(test)
rownames(data)
as.numeric(rownames(data))
mask
comask <- setdiff(mask, as.numeric(rownames(data)))
comask
test <- data[setdiff(mask, as.numeric(rownames(data))),]
test
index <- as.numeric(rownames(data))
test <- data[setdiff(index, mask),]
mask <- sample.int(n, floor(n*0.8))
train <- data[mask,]
test <- data[setdiff(index, mask),]
test <- data[setdiff(index, mask),]
data <-read.csv("data/winequality-red.csv", sep = ';')
n <- dim(data)[1]
p <-dim(data)[2] - 1
X <- data[,1:11]
y <- data$quality
index <- as.numeric(rownames(data))
mask <- sample.int(n, floor(n*0.8))
train <- data[mask,]
test <- data[setdiff(index, mask),]
dim(test)
320/dim(data)[1]
y_train <- train.quality
mask <- sample.int(n, floor(n*0.8))
train <- data[mask,]
train
type(train)
class(train)
y_train <- train[,12]
y_train
fit <- plsRglm(y_train, X_train, 10,  modele="pls-glm-gaussian")
train <- data[mask,]
X_train <- train[,1:11]
y_train <- train[,12]
test <- data[setdiff(index, mask),]
X_test <- test[,1:11]
y_test <- test[,12]
fit <- plsRglm(y_train, X_train, 10,  modele="pls-glm-gaussian")
clf <- fit$FinalModel
predict(clf, X_test)
predict(fit, X_test)
mae <- mae(y_test, y_pred)
mae <- mean(abs(y_test - y_pred))
y_pred <- predict(fit, X_test)
mae <- mean(abs(y_test - y_pred))
mae
fit <- plsRglm(y_train, X_train, 11,  modele="pls-glm-gaussian")
y_pred <- predict(fit, X_test)
mae <- mean(abs(y_test - y_pred))
mae
fit <- plsRglm(y_train, X_train, 15,  modele="pls-glm-gaussian")
y_pred <- predict(fit, X_test)
mae <- mean(abs(y_test - y_pred))
mae
fit <- cv.plsRglm(y_train, X_train, 11, NK=10, modele="pls-glm-gaussian")
y_pred <- predict(fit, X_test)
summary(fit)
summary(fit)
fit.folds
str(fit)
fit$results_kfolds
fit$dataY_kfolds
y_pred <- predict(fit, X_test, type = 'response')
fit <- plsRglm(y_train, X_train, 11, modele="pls-glm-gaussian")
fit$dataY_kfolds
y_pred <- predict(fit, X_test, type = 'response')
mae <- mean(abs(y_test - y_pred))
mae
y_pred <- predict(fit, X_test)
